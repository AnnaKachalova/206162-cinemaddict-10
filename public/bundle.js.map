{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/film-card.js","webpack:///./src/components/films-container.js","webpack:///./src/components/menu.js","webpack:///./src/components/more-button.js","webpack:///./src/components/most-commented.js","webpack:///./src/components/popup.js","webpack:///./src/components/profile.js","webpack:///./src/components/top-rated.js","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/film-card.js","webpack:///./src/mock/menu.js","webpack:///./src/mock/most-commented.js","webpack:///./src/mock/popup.js","webpack:///./src/mock/profile.js","webpack:///./src/mock/top-rated.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,mCAAmC,MAAM;AACzC,uCAAuC,OAAO;AAC9C;AACA,wCAAwC,eAAe;AACvD,4CAA4C,SAAS;AACrD,yCAAyC,MAAM;AAC/C;AACA,qCAAqC,OAAO;AAC5C,4CAA4C,YAAY;AACxD,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB;AAC1B,sBAAsB,KAAK,kCAAkC,KAAK,6CAA6C,SAAS;AACxH;;;;;;;;;;;;;ACnBA;AAAA;AAAO;AACP;AACA;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uCAAuC,MAAM;AAC7C,2CAA2C,OAAO;AAClD;AACA,4CAA4C,eAAe;AAC3D,gDAAgD,SAAS;AACzD,6CAA6C,MAAM;AACnD;AACA,yCAAyC,OAAO;AAChD,gDAAgD,YAAY;AAC5D,6CAA6C,iBAAiB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AACA;AACA,gDAAgD,MAAM;AACtD,GAAG;AACH;;AAEA;AACA;AACA,WAAW,8BAA8B;AACzC;AACA;AACA,iCAAiC,SAAS;AAC1C;AACA;AACA,8CAA8C,KAAK;AACnD;AACA,sDAAsD,MAAM;AAC5D,kDAAkD,KAAK;AACvD;AACA;AACA;AACA;AACA,GAAG;AACH;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,OAAO;;AAE/E,yCAAyC,UAAU;AACnD;;AAEA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD,kEAAkE,SAAS;AAC3E;;AAEA;AACA,sDAAsD,OAAO;AAC7D;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA,+CAA+C,aAAa;AAC5D;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA,+CAA+C,YAAY;AAC3D;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA,sDAAsD,YAAY;AAClE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnKA;AAAA;AAAO;AACP;AACA;AACA,+BAA+B,KAAK;AACpC;AACA;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uCAAuC,MAAM;AAC7C,2CAA2C,OAAO;AAClD;AACA,4CAA4C,eAAe;AAC3D,gDAAgD,SAAS;AACzD,6CAA6C,MAAM;AACnD;AACA,yCAAyC,OAAO;AAChD,gDAAgD,YAAY;AAC5D,6CAA6C,iBAAiB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;AACZ;AACG;AACZ;AACS;AACU;AACb;AACW;;AAE5E;AAC+D;AACtB;AACQ;AACD;;AAEiB;AACb;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,2FAA4B,CAAC,qDAAI;;AAEpD;AACA;;AAEA;AACA,cAAc,4EAAiB;AAC/B,gBAAgB,sEAAe,CAAC,wDAAK;;AAErC,oBAAoB,+EAAmB;;AAEvC,oBAAoB,oGAA6B;AACjD,cAAc,qEAAa;AAC3B,oBAAoB,qFAAwB;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,wFAAuB;AACpE,iBAAiB,gGAA6B;;AAE9C;AACA,qBAAqB,sFAAqB,CAAC,wDAAK;AAChD,uBAAuB,kGAA4B;;AAEnD,iBAAiB,yEAAgB,CAAC,wDAAK;AACvC,uBAAuB,wFAAuB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,wFAAuB;;AAEtE;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1ED;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,MAAM,IAAI,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEoC;;;;;;;;;;;;;AChGpC;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA,KAAK,6CAA6C;AAClD,KAAK,2CAA2C;AAChD,KAAK,uCAAuC;AAC5C,KAAK,0CAA0C;AAC/C;AACA;;AAE2B;;;;;;;;;;;;;ACb3B;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiC;;;;;;;;;;;;;ACRjC;AAAA;AAAA;AAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,MAAM,IAAI,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,qDAAW;AAC9C;;AAEA,YAAY,IAAI,GAAG,MAAM,GAAG,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,KAAK,GAAG,MAAM,GAAG,IAAI,GAAG,MAAM,GAAG,QAAQ;AACrD;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC9IzB;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;AACe;;;;;;;;;;;;;ACjChB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE4B","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export const createFilmCardComponent = film => {\n  const {\n    title,\n    poster,\n    description,\n    rating,\n    productionYear,\n    duration,\n    genre,\n    numberOfComments,\n  } = film;\n\n  return `\n<article class=\"film-card\">\n    <h3 class=\"film-card__title\">${title}</h3>\n        <p class=\"film-card__rating\">${rating}</p>\n        <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${productionYear}</span>\n        <span class=\"film-card__duration\">${duration}</span>\n        <span class=\"film-card__genre\">${genre}</span>\n        </p>\n        <img src=\"./images/posters/${poster}.jpg\" alt=\"\" class=\"film-card__poster\">\n        <p class=\"film-card__description\">${description}</p>\n        <a class=\"film-card__comments\">${numberOfComments} comments</a>\n    <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched\">Mark as watched</button>\n        <button class=\"film-card__controls-item button film-card__controls-item--favorite\">Mark as favorite</button>\n    </form>\n</article>`;\n};\n","export const createFilmsContainerComponent = () => {\n  return `\n<section class=\"films\">\n  <section class=\"films-list\">\n    <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n    <div class=\"films-list__container\"></div>\n  </section>\n</section>`;\n};\n","export const createMenuComponent = filters => {\n  const filtersMarkup = filters\n    .map((it, i) => createFilterTemplate(it, i === 0))\n    .join(`\\n`);\n  return `\n<nav class=\"main-navigation\">\n  ${filtersMarkup}\n  <a href=\"#stats\" class=\"main-navigation__item main-navigation__item--additional\">Stats</a>\n</nav>\n<ul class=\"sort\">\n    <li><a href=\"#\" class=\"sort__button sort__button--active\">Sort by default</a></li>\n    <li><a href=\"#\" class=\"sort__button\">Sort by date</a></li>\n    <li><a href=\"#\" class=\"sort__button\">Sort by rating</a></li>\n</ul>\n`;\n};\nconst createFilterTemplate = (filter, isChecked) => {\n  const { name, quantity } = filter;\n  return `<a href=\"#${name}\" class=\"main-navigation__item\">${name} <span class=\"main-navigation__item-count\">${quantity}</span></a>`;\n};\n","export const createShowMoreButtonComponent = () => {\n  return `<button class=\"films-list__show-more\">Show more</button>`;\n};\n","const createFilmCardTemplate = films => {\n  return Array.from(films).map(film => {\n    const {\n      title,\n      poster,\n      description,\n      rating,\n      productionYear,\n      duration,\n      genre,\n      numberOfComments,\n    } = film;\n    return `\n    <article class=\"film-card\">\n        <h3 class=\"film-card__title\">${title}</h3>\n            <p class=\"film-card__rating\">${rating}</p>\n            <p class=\"film-card__info\">\n            <span class=\"film-card__year\">${productionYear}</span>\n            <span class=\"film-card__duration\">${duration}</span>\n            <span class=\"film-card__genre\">${genre}</span>\n            </p>\n            <img src=\"./images/posters/${poster}.jpg\" alt=\"\" class=\"film-card__poster\">\n            <p class=\"film-card__description\">${description}</p>\n            <a class=\"film-card__comments\">${numberOfComments} comments</a>\n        <form class=\"film-card__controls\">\n            <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist\">Add to watchlist</button>\n            <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched\">Mark as watched</button>\n            <button class=\"film-card__controls-item button film-card__controls-item--favorite\">Mark as favorite</button>\n        </form>\n    </article>`;\n  });\n};\n\nexport const createMostCommentedComponent = films => {\n  const filmCardMarkup = createFilmCardTemplate(films);\n  return `\n  <section class=\"films-list--extra\">\n    <h2 class=\"films-list__title\">Most commented</h2>\n    <div class=\"films-list__container\">\n    ${filmCardMarkup}\n    </div>\n  </section>`;\n};\n","const createGenre = genres => {\n  return Array.from(genres).map(genre => {\n    return `<span class=\"film-details__genre\">${genre}</span>`;\n  });\n};\n\nconst createComment = comments => {\n  return Array.from(comments).map(comment => {\n    const { emoticon, text, autor, date } = comment;\n    return `<li class=\"film-details__comment\">\n    <span class=\"film-details__comment-emoji\">\n      <img src=\"./images/emoji/${emoticon}.png\" width=\"55\" height=\"55\" alt=\"emoji\">\n    </span>\n    <div>\n      <p class=\"film-details__comment-text\">${text}</p>\n      <p class=\"film-details__comment-info\">\n        <span class=\"film-details__comment-author\">J${autor}</span>\n        <span class=\"film-details__comment-day\">${date}</span>\n        <button class=\"film-details__comment-delete\">Delete</button>\n      </p>\n    </div>\n  </li>`;\n  });\n};\nexport const createPopupCardComponent = popup => {\n  const {\n    poster,\n    title,\n    original,\n    rating,\n    userRating,\n    producer,\n    screenwriter,\n    actors,\n    releaseDate,\n    duration,\n    country,\n    genre,\n    description,\n    ageRating,\n    comments,\n  } = popup;\n\n  const genreMarkup = createGenre(genre);\n  const commentsMarkup = createComment(comments);\n\n  return `\n<section class=\"film-details visually-hidden\">\n  <form class=\"film-details__inner\" action=\"\" method=\"get\">\n    <div class=\"form-details__top-container\">\n      <div class=\"film-details__close\">\n        <button class=\"film-details__close-btn\" type=\"button\">close</button>\n      </div>\n      <div class=\"film-details__info-wrap\">\n        <div class=\"film-details__poster\">\n          <img class=\"film-details__poster-img\" src=\"./images/posters/${poster}.jpg\" alt=\"\">\n\n          <p class=\"film-details__age\">${ageRating}+</p>\n        </div>\n\n        <div class=\"film-details__info\">\n          <div class=\"film-details__info-head\">\n            <div class=\"film-details__title-wrap\">\n              <h3 class=\"film-details__title\">${title}</h3>\n              <p class=\"film-details__title-original\">Original: ${original}</p>\n            </div>\n\n            <div class=\"film-details__rating\">\n              <p class=\"film-details__total-rating\">${rating}</p>\n            </div>\n          </div>\n\n          <table class=\"film-details__table\">\n            <tr class=\"film-details__row\">\n              <td class=\"film-details__term\">Director</td>\n              <td class=\"film-details__cell\">${producer}</td>\n            </tr>\n            <tr class=\"film-details__row\">\n              <td class=\"film-details__term\">Writers</td>\n              <td class=\"film-details__cell\">${screenwriter}</td>\n            </tr>\n            <tr class=\"film-details__row\">\n              <td class=\"film-details__term\">Actors</td>\n              <td class=\"film-details__cell\">${actors}</td>\n            </tr>\n            <tr class=\"film-details__row\">\n              <td class=\"film-details__term\">Release Date</td>\n              <td class=\"film-details__cell\">${releaseDate}</td>\n            </tr>\n            <tr class=\"film-details__row\">\n              <td class=\"film-details__term\">Runtime</td>\n              <td class=\"film-details__cell\">${duration}</td>\n            </tr>\n            <tr class=\"film-details__row\">\n              <td class=\"film-details__term\">Country</td>\n              <td class=\"film-details__cell\">${country}</td>\n            </tr>\n            <tr class=\"film-details__row\">\n              <td class=\"film-details__term\">Genres</td>\n              <td class=\"film-details__cell\">\n                ${genreMarkup}\n              </td>\n            </tr>\n          </table>\n\n          <p class=\"film-details__film-description\">${description}</p>\n        </div>\n      </div>\n\n      <section class=\"film-details__controls\">\n        <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\">\n        <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n\n        <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\">\n        <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n\n        <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\">\n        <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n      </section>\n    </div>\n\n    <div class=\"form-details__bottom-container\">\n      <section class=\"film-details__comments-wrap\">\n        <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">4</span></h3>\n\n        <ul class=\"film-details__comments-list\">\n          ${commentsMarkup}\n        </ul>\n\n        <div class=\"film-details__new-comment\">\n          <div for=\"add-emoji\" class=\"film-details__add-emoji-label\"></div>\n\n          <label class=\"film-details__comment-label\">\n            <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\n          </label>\n\n          <div class=\"film-details__emoji-list\">\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"sleeping\">\n            <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n              <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n            </label>\n\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"neutral-face\">\n            <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n              <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n            </label>\n\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-gpuke\" value=\"grinning\">\n            <label class=\"film-details__emoji-label\" for=\"emoji-gpuke\">\n              <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n            </label>\n\n            <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"grinning\">\n            <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n              <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n            </label>\n          </div>\n        </div>\n      </section>\n    </div>\n  </form>\n</section>\n`;\n};\n","export const createHeaderProfileComponent = rank => {\n  return `\n<section class=\"header__profile profile\">\n  <p class=\"profile__rating\">${rank}</p>\n  <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n</section>\n`;\n};\n","const createFilmCardTemplate = films => {\n  return Array.from(films).map(film => {\n    const {\n      title,\n      poster,\n      description,\n      rating,\n      productionYear,\n      duration,\n      genre,\n      numberOfComments,\n    } = film;\n    return `\n    <article class=\"film-card\">\n        <h3 class=\"film-card__title\">${title}</h3>\n            <p class=\"film-card__rating\">${rating}</p>\n            <p class=\"film-card__info\">\n            <span class=\"film-card__year\">${productionYear}</span>\n            <span class=\"film-card__duration\">${duration}</span>\n            <span class=\"film-card__genre\">${genre}</span>\n            </p>\n            <img src=\"./images/posters/${poster}.jpg\" alt=\"\" class=\"film-card__poster\">\n            <p class=\"film-card__description\">${description}</p>\n            <a class=\"film-card__comments\">${numberOfComments} comments</a>\n        <form class=\"film-card__controls\">\n            <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist\">Add to watchlist</button>\n            <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched\">Mark as watched</button>\n            <button class=\"film-card__controls-item button film-card__controls-item--favorite\">Mark as favorite</button>\n        </form>\n    </article>`;\n  });\n};\n\nexport const createTopRatedComponent = films => {\n  const filmCardMarkup = createFilmCardTemplate(films);\n  return `\n<section class=\"films-list--extra\">\n  <h2 class=\"films-list__title\">Top rated</h2>\n  <div class=\"films-list__container\">\n    ${filmCardMarkup}\n  </div>\n</section>`;\n};\n","export const MONTH_NAMES = [\n  `January`,\n  `February`,\n  `March`,\n  `April`,\n  `May`,\n  `June`,\n  `July`,\n  `August`,\n  `September`,\n  `October`,\n  `November`,\n  `December`,\n];\n","import { createFilmsContainerComponent } from './components/films-container.js';\nimport { createFilmCardComponent } from './components/film-card.js';\nimport { createHeaderProfileComponent } from './components/profile.js';\nimport { createMenuComponent } from './components/menu.js';\nimport { createTopRatedComponent } from './components/top-rated.js';\nimport { createMostCommentedComponent } from './components/most-commented.js';\nimport { createPopupCardComponent } from './components/popup.js';\nimport { createShowMoreButtonComponent } from './components/more-button.js';\n\n// mock\nimport { generateFilmCards, films } from './mock/film-card.js';\nimport { rank } from './mock/profile.js';\nimport { generateFilters } from './mock/menu.js';\nimport { generatePopup } from './mock/popup.js';\n\nimport { generateMostCommented } from './mock/most-commented.js';\nimport { generateTopRated } from './mock/top-rated';\n\nconst CARD_COUNT = 15;\nconst SHOWING_TASKS_COUNT_ON_START = 6;\nconst SHOWING_TASKS_COUNT_BY_BUTTON = 5;\n\nconst render = (container, template, place = `beforeend`) => {\n  container.insertAdjacentHTML(place, template);\n};\n\nconst siteHeader = document.querySelector(`.header`);\nrender(siteHeader, createHeaderProfileComponent(rank));\n\nconst bodyElement = document.querySelector(`body`);\nconst mainElement = document.querySelector(`.main`);\n\n// создание фильтров\nconst cards = generateFilmCards(CARD_COUNT);\nconst filters = generateFilters(films);\n\nrender(mainElement, createMenuComponent(filters));\n\nrender(mainElement, createFilmsContainerComponent());\nconst popup = generatePopup();\nrender(bodyElement, createPopupCardComponent(popup));\n\n// получение блоков для фильмов\nconst filmsContainer = mainElement.querySelector(`.films`);\nconst filmList = filmsContainer.querySelector(`.films-list`);\nconst filmListContainer = filmList.querySelector(`.films-list__container`);\n\n// наполенение контейнера с фильмами\nlet showingTasksCount = SHOWING_TASKS_COUNT_ON_START;\ncards\n  .slice(1, showingTasksCount)\n  .forEach(card => render(filmListContainer, createFilmCardComponent(card)));\nrender(filmList, createShowMoreButtonComponent());\n\n// наполнение контейнеров  Top rated и Most commented\nconst mostCommeted = generateMostCommented(films);\nrender(filmsContainer, createMostCommentedComponent(mostCommeted));\n\nconst topRated = generateTopRated(films);\nrender(filmsContainer, createTopRatedComponent(topRated));\n\n// наполнение контейнеров  Top rated и Most commented\nconst showMoreButton = mainElement.querySelector(`.films-list__show-more`);\nshowMoreButton.addEventListener(`click`, () => {\n  const prevTasksCount = showingTasksCount;\n  showingTasksCount = showingTasksCount + SHOWING_TASKS_COUNT_BY_BUTTON;\n\n  cards\n    .slice(prevTasksCount, showingTasksCount)\n    .forEach(card => render(filmListContainer, createFilmCardComponent(card)));\n\n  if (showingTasksCount >= cards.length) {\n    showMoreButton.remove();\n  }\n});\n","const films = [];\nconst FilmTitles = [\n  `Чужой`,\n  `Амели`,\n  `Аватар`,\n  `Назад в будущее`,\n  `Брюс Всемогущий`,\n  `Бойцовский клуб`,\n  `Гладиатор`,\n  `Унесенные ветром`,\n  `Мистер и миссис Смит`,\n  `1+1`,\n  `Притворись моей женой`,\n  `Криминальное чтиво`,\n  `Тёмный рыцарь`,\n  `В джазе только девушки`,\n  `Шоу Трумана`,\n];\nconst FilmPosters = [\n  `alien`,\n  `ameli`,\n  `avatar`,\n  `back_to_the_future`,\n  `bruce_almighty`,\n  `fight_club`,\n  `gladiator`,\n  `gone_with_the_wind`,\n  `mr_and_mrs_smith`,\n  `one_plus_one`,\n  `pretend_my_wife`,\n  `pulp_fiction`,\n  `the_dark_knight`,\n  `there_are_only_girls_in_jazz`,\n  `truman_show`,\n];\nconst FilmGenres = [\n  `Боевик`,\n  `Вестерн`,\n  `Детектив`,\n  `Драма`,\n  `Исторический`,\n  `Комедия`,\n  `Мелодрама`,\n];\nconst FilmDescriptions = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra. Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante. Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis. Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.`;\n\nconst getRandomIntegerNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\nconst getRandomArrayIndex = array => {\n  const randomIndex = getRandomIntegerNumber(0, array.length);\n  return randomIndex;\n};\nconst getRandomArrayElem = array => {\n  const randomIndex = getRandomIntegerNumber(0, array.length);\n  return array[randomIndex];\n};\n\nconst getDescription = () => {\n  const descriptions = FilmDescriptions.split('. ');\n  return [getRandomArrayElem(descriptions), getRandomArrayElem(descriptions)].join('.');\n};\nconst getRating = (min = 0, max = 10) => {\n  const randRating = Math.random() * (max - min) + min;\n  return randRating.toFixed(1);\n};\nconst getDuration = () => {\n  const hours = getRandomIntegerNumber(1, 5);\n  const minutes = getRandomIntegerNumber(1, 59);\n\n  return `${hours}h ${minutes}m`;\n};\nconst generateFilmCard = () => {\n  const randomIndex = getRandomArrayIndex(FilmTitles);\n\n  const film = {\n    title: FilmTitles[randomIndex],\n    poster: FilmPosters[randomIndex],\n    description: getDescription(),\n    rating: getRating(),\n    productionYear: getRandomIntegerNumber(1990, 2019),\n    duration: getDuration(),\n    genre: getRandomArrayElem(FilmGenres),\n    numberOfComments: getRandomIntegerNumber(0, 100),\n    isWatchilst: Math.random() > 0.5,\n    isHistory: Math.random() > 0.5,\n    isFavorite: Math.random() > 0.5,\n  };\n  films.push(film);\n\n  return film;\n};\nconst generateFilmCards = count => {\n  return new Array(count).fill(``).map(generateFilmCard);\n};\n\nexport { generateFilmCards, films };\n","const generateFilters = films => {\n  const isWatchilst = films.filter(film => film.isWatchilst === true).length;\n  const isHistory = films.filter(film => film.isHistory === true).length;\n  const isFavorite = films.filter(film => film.isFavorite === true).length;\n\n  return [\n    { name: 'All movies', quantity: films.length },\n    { name: 'Watchlist', quantity: isWatchilst },\n    { name: 'History', quantity: isHistory },\n    { name: 'Favorites', quantity: isFavorite },\n  ];\n};\n\nexport { generateFilters };\n","const generateMostCommented = films => {\n  const sortByСomment = arr => {\n    arr.sort((a, b) => (a.numberOfComments > b.numberOfComments ? 1 : -1)).reverse();\n  };\n  sortByСomment(films);\n  return films.slice(0, 2);\n};\n\nexport { generateMostCommented };\n","import { MONTH_NAMES } from '../const.js';\nconst FilmTitles = [\n  `Чужой`,\n  `Амели`,\n  `Аватар`,\n  `Назад в будущее`,\n  `Брюс Всемогущий`,\n  `Бойцовский клуб`,\n  `Гладиатор`,\n  `Унесенные ветром`,\n  `Мистер и миссис Смит`,\n  `1+1`,\n  `Притворись моей женой`,\n  `Криминальное чтиво`,\n  `Тёмный рыцарь`,\n  `В джазе только девушки`,\n  `Шоу Трумана`,\n];\nconst FilmPosters = [\n  `alien`,\n  `ameli`,\n  `avatar`,\n  `back_to_the_future`,\n  `bruce_almighty`,\n  `fight_club`,\n  `gladiator`,\n  `gone_with_the_wind`,\n  `mr_and_mrs_smith`,\n  `one_plus_one`,\n  `pretend_my_wife`,\n  `pulp_fiction`,\n  `the_dark_knight`,\n  `there_are_only_girls_in_jazz`,\n  `truman_show`,\n];\nconst FilmGenres = [\n  `Боевик`,\n  `Вестерн`,\n  `Детектив`,\n  `Драма`,\n  `Исторический`,\n  `Комедия`,\n  `Мелодрама`,\n];\nconst FilmProducers = [`Аарон Спеллинг`, `Джеймс Кэмерон`, `Майкл Бин`];\nconst FilmScreenwriters = [`Аарон Спеллинг`, `Джеймс Кэмерон`, `Майкл Бин`];\nconst FilmActors = [`Аарон Спеллинг`, `Джеймс Кэмерон`, `Майкл Бин`];\nconst FilmCountries = [`США`, `Франция`, `Великобритания`];\n\nconst getDuration = () => {\n  const hours = getRandomIntegerNumber(1, 5);\n  const minutes = getRandomIntegerNumber(1, 59);\n\n  return `${hours}h ${minutes}m`;\n};\nconst getRating = (min = 0, max = 10) => {\n  const randRating = Math.random() * (max - min) + min;\n  return randRating.toFixed(1);\n};\nconst FilmDescriptions = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra. Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante. Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis. Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.`;\nconst getRandomIntegerNumber = (min, max) => {\n  return Math.floor(Math.random() * (max - min) + min);\n};\nconst getRandomArrayIndex = array => {\n  const randomIndex = getRandomIntegerNumber(0, array.length);\n  return randomIndex;\n};\nconst getRandomArrayElem = array => {\n  const randomIndex = getRandomIntegerNumber(0, array.length);\n  return array[randomIndex];\n};\nconst getGenres = () => {\n  return [getRandomArrayElem(FilmGenres), getRandomArrayElem(FilmGenres)];\n};\nconst getRandomDate = () => {\n  const targerDate = new Date();\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  const diffValue = sign * getRandomIntegerNumber(0, 7);\n  const day = targerDate.getDate() + diffValue;\n  const month = getRandomArrayElem(MONTH_NAMES);\n  const year = getRandomIntegerNumber(1990, 2019);\n\n  return `${day} ${month} ${year}`;\n};\n// комментарии\nconst emoticons = [`smile`, `sleeping`, `puke`, `angry`];\nconst emoticonsText = [\n  `Almost two hours? Seriously?`,\n  `Very very old. Meh`,\n  `Booooooooooring`,\n];\nconst emoticonsAutor = [`John Doe`, `Tim Macoveev`];\n\nconst getRandomDateEmoticons = () => {\n  const targerDate = new Date();\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  const diffValue = sign * getRandomIntegerNumber(0, 7);\n  const day = targerDate.getDate() + diffValue;\n  const month = targerDate.getMonth();\n  const year = getRandomIntegerNumber(1990, 2019);\n  const hours = getRandomIntegerNumber(1, 23);\n  const minutes = getRandomIntegerNumber(1, 59);\n\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n};\nconst generateComments = () => {\n  const randomCount = getRandomIntegerNumber(1, 5);\n  const comments = [];\n  for (let i = 0; i < randomCount; i++) {\n    const comment = {\n      emoticon: getRandomArrayElem(emoticons),\n      text: getRandomArrayElem(emoticonsText),\n      autor: getRandomArrayElem(emoticonsAutor),\n      date: getRandomDateEmoticons(),\n    };\n    comments.push(comment);\n  }\n  return comments;\n};\n\nconst generatePopup = () => {\n  const randomIndex = getRandomArrayIndex(FilmTitles);\n\n  return {\n    poster: FilmPosters[randomIndex],\n    title: FilmTitles[randomIndex],\n    original: FilmTitles[randomIndex],\n    rating: getRating(),\n    userRating: getRandomIntegerNumber(0, 5),\n    producer: getRandomArrayElem(FilmProducers),\n    screenwriter: getRandomArrayElem(FilmScreenwriters),\n    actors: getRandomArrayElem(FilmActors),\n    releaseDate: getRandomDate(),\n    duration: getDuration(),\n    country: getRandomArrayElem(FilmCountries),\n    genre: getGenres(),\n    description: FilmDescriptions,\n    ageRating: getRandomIntegerNumber(6, 18),\n    comments: generateComments(),\n  };\n};\n\nexport { generatePopup };\n","const numberOfMovies = 15;\n\nconst RankType = {\n  NEITHER: 'neither',\n  NOVICE: 'novice',\n  FAN: 'fan',\n  MOVIE_BUFF: 'movie buff',\n};\nconst RankGradation = {\n  [RankType.NEITHER]: {\n    MIN_VALUE: -1,\n    MAX_VALUE: 0,\n  },\n  [RankType.NOVICE]: {\n    MIN_VALUE: 1,\n    MAX_VALUE: 10,\n  },\n  [RankType.FAN]: {\n    MIN_VALUE: 11,\n    MAX_VALUE: 20,\n  },\n  [RankType.MOVIE_BUFF]: {\n    MIN_VALUE: 20,\n    MAX_VALUE: Infinity,\n  },\n};\n\nlet rank = Object.keys(RankGradation).find(key => {\n  const min = Number(RankGradation[key].MIN_VALUE);\n  const max = Number(RankGradation[key].MAX_VALUE);\n\n  if (min <= numberOfMovies && numberOfMovies <= max) return key;\n});\nexport { rank };\n","const generateTopRated = films => {\n  const sortByRating = arr => {\n    arr.sort((a, b) => (a.rating > b.rating ? 1 : -1)).reverse();\n  };\n  sortByRating(films);\n  return films.slice(0, 2);\n};\n\nexport { generateTopRated };\n"],"sourceRoot":""}